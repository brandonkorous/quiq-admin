name: Admin CI

on:
  push:
    branches: [ main ]
    paths:
      - 'admin/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'admin/**'

env:
  ACR_NAME: your-acr-name
  IMAGE_NAME: quiq-admin-app
  RESOURCE_GROUP: your-resource-group
  LOCATION: westus2
  KEY_VAULT_NAME: quiq-admin-key-vault

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create Azure Key Vault
      run: |
        az keyvault create --name ${{ env.KEY_VAULT_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --location ${{ env.LOCATION }}
    
    - name: Set Key Vault Access Policy
      run: |
        az keyvault set-policy --name ${{ env.KEY_VAULT_NAME }} --object-id ${{ secrets.AZURE_CLIENT_ID }} --secret-permissions get list set delete

    - name: Store secrets in Key Vault
      run: |
        az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "AUTH0-DOMAIN" --value "${{ secrets.AUTH0_DOMAIN }}"
        az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "AUTH0-CLIENT-ID" --value "${{ secrets.AUTH0_CLIENT_ID }}"
        az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "AUTH0-AUDIENCE" --value "${{ secrets.AUTH0_AUDIENCE }}"
        az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "API-GATEWAY-URL" --value "${{ secrets.API_GATEWAY_URL }}"
        az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "USER-SERVICE-URL" --value "${{ secrets.USER_SERVICE_URL }}"
        az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "VIDEO-SERVICE-URL" --value "${{ secrets.VIDEO_SERVICE_URL }}"
        az keyvault secret set --vault-name ${{ env.KEY_VAULT_NAME }} --name "INTERACTION-SERVICE-URL" --value "${{ secrets.INTERACTION_SERVICE_URL }}"

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        
    - name: Install dependencies
      run: |
        cd admin
        npm ci
        
    - name: Run tests
      run: |
        cd admin
        npm test
        
    - name: Build project
      run: |
        cd admin
        npm run build
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./admin
        push: true
        tags: ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

